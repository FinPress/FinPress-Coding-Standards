<documentation title="Prefix All Globals">
    <standard>
    <![CDATA[
      All globals terms (classes, defines, functions, and namespaces) must be prefixed with a theme/plugin specific term. These prefixes must be distinct and unique to the plugin/theme, in order to prevent potential conflicts with other plugins and themes.
    ]]>
    </standard>
    <code_comparison>
        <code title="Valid: Using the prefix ECPT_">
        <![CDATA[
define( 'ECPT_VERSION', '1.0' );
        ]]>
        </code>
        <code title="Invalid: Using a generic prefix of PLUGIN_">
        <![CDATA[
define( 'PLUGIN_VERSION', '1.0' );
        ]]>
        </code>
    </code_comparison>
    <standard>
    <![CDATA[
      Using any prefixes designated for WordPress are not permitted, even if WordPress has not used the define. This includes all defines such as _() (underscores), __() double underscores, wp_, and wordpress_
    ]]>
    </standard>
    <code_comparison>
        <code title="Valid: Using the prefix mycoolplugin_">
        <![CDATA[
function mycoolplugin_save_post();
        ]]>
        </code>
        <code title="Invalid: Using a WordPress reserved prefix wp_">
        <![CDATA[
function wp_save_post();
        ]]>
        </code>
    </code_comparison>
    <standard>
    <![CDATA[
      Two-letter prefixes should be avoided as many plugins and themes share the same intials.
    ]]>
    </standard>
    <code_comparison>
        <code title="Valid: Using the distinct prefix MyPlugin">
        <![CDATA[
class MyPluginIsCool {}
        ]]>
        </code>
        <code title="Invalid: Using a two-letter prefix MP">
        <![CDATA[
class MP {}
        ]]>
        </code>
    </code_comparison>
</documentation>